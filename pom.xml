<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.group_finity</groupId>
	<artifactId>mascot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>V-Shimeji</name>
	<description>V Shimeji-ee</description>
	<packaging>jar</packaging>

	<inceptionYear/>
	<licenses/>

	<scm/>
	<issueManagement/>
	<ciManagement/>
	<distributionManagement/>

	<properties>
		<java.version>21</java.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<mainClass>com.group_finity.mascot.VShimejiApplication</mainClass>

		<libPrefix>lib</libPrefix>
		<libDirectory>${project.build.directory}/${libPrefix}</libDirectory>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>



		<dependency>
			<!-- AbsoluteLayout-->
			<groupId>org.netbeans.external</groupId>
			<artifactId>AbsoluteLayout</artifactId>
			<version>RELEASE200</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<!-- Java Native Access Platform -->
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna-platform</artifactId>
			<version>5.14.0</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<!-- Nimrod Look and Feel -->
			<groupId>es.nilogonzalez</groupId>
			<artifactId>nimrodlf</artifactId>
			<version>1.2d</version>
			<scope>system</scope>
			<!-- Nimrod L&F has no official Maven artifact, so I am going to use the official download for now. -->
			<!--https://nilogonzalez.es/nimrodlf/download-en.html -->
			<systemPath>${project.basedir}/${libPrefix}/nimrodlf-1.2d.jar</systemPath>
		</dependency>

		<dependency>
			<!-- OpenJDK Nashorn -->
			<groupId>org.openjdk.nashorn</groupId>
			<artifactId>nashorn-core</artifactId>
			<version>15.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>


			<plugin>
				<!-- Set main class -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<classpathPrefix>${libPrefix}/</classpathPrefix>
							<mainClass>${mainClass}</mainClass>
						</manifest>
						<manifestEntries>
							<!-- Manually add Nimrod L&F to the classpath because it is a system dependency -->
							<Class-Path>${libPrefix}/nimrodlf-1.2d.jar</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- Copy dependencies to target/lib directory -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${libDirectory}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<!-- Parse version components and create properties for them -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/static/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/defaults/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
